events {
    worker_connections 1024;
}

http {
    upstream portfolio {
        server portfolio:5000;
    }
    
    upstream pks {
        server pks:8080;
    }
    
    upstream podology {
        server podology:8080;
    }

    # HTTP server - redirect to HTTPS
    server {
        listen 80;
        server_name somethingsomethingdata.eu www.somethingsomethingdata.eu;
        return 301 https://$host$request_uri;
    }

    # HTTPS server
    server {
        listen 443 ssl;
        server_name somethingsomethingdata.eu www.somethingsomethingdata.eu;

	ssl_certificate /etc/ssl/certs/fullchain.pem;
        ssl_certificate_key /etc/ssl/certs/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # Portfolio app (main application)
        location /portfolio/ {
            proxy_pass http://portfolio/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # PKS Dashboard
        location /pks/ {
            proxy_pass http://pks/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Podology Dashboard  
        location /podology/ {
            proxy_pass http://podology/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Root path - serve portfolio as default
        location / {
            proxy_pass http://portfolio/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
